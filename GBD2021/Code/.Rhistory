"Republic of Côte d'Ivoire"              = "Côte d'Ivoire",
"Republic of Guinea"                     = "Guinea",
"Republic of Liberia"                    = "Liberia",
"Republic of Ghana"                      = "Ghana",
"Islamic Republic of Mauritania"         = "Mauritania",
"Republic of Guinea-Bissau"              = "Guinea-Bissau",
"Federal Republic of Nigeria"            = "Nigeria",
"Republic of Mali"                       = "Mali",
"Republic of the Niger"                  = "Niger",
"Republic of Senegal"                    = "Senegal",
"Togolese Republic"                      = "Togo",
"Democratic Republic of Sao Tome and Principe" = "Sao Tome and Principe",
"American Samoa"                         = "American Samoa",
"Republic of Sierra Leone"               = "Sierra Leone",
"Cook Islands"                           = "Cook Islands",
"Guam"                                   = "Guam",
"Bermuda"                                = "Bermuda",
"Greenland"                              = "Greenland",
"Republic of Nauru"                      = "Nauru",
"Principality of Monaco"                 = "Monaco",
"Northern Mariana Islands"               = "Northern Mariana Islands",
"Puerto Rico"                            = "Puerto Rico",
"Republic of San Marino"                 = "San Marino",
"Republic of Niue"                       = "Niue",
"Republic of Palau"                      = "Palau",
"Saint Kitts and Nevis"                  = "Saint Kitts and Nevis",
"Tuvalu"                                 = "Tuvalu",
"Tokelau"                                = "Tokelau",
"Republic of South Sudan"                = "South Sudan",
"United States Virgin Islands"           = "United States Virgin Islands",
"Republic of Sudan"                      = "Sudan"
),
# grab ISO3
iso_a3 = countrycode(location_clean,
origin      = "country.name",
destination = "iso3c")
)
# check if any still failed
nation %>% filter(is.na(iso_a3))
asr_df <- nation %>%
filter(
rei     == "Air pollution",
age     == "Age-standardized",
metric  == "Rate",
measure == "Deaths",
year    == 2021
) %>%
select(iso_a3, val)
# Get world map and join on ISO3
world <- ne_countries(scale = "medium", returnclass = "sf") %>%
filter(continent != "Antarctica")
world_asr <- left_join(world, asr_df, by = "iso_a3")
world_robin <- st_transform(world_asr, crs = "+proj=robin")
# plot
map_asr <- ggplot(world_robin) +
# light grey base for every country
geom_sf(fill = "grey95", color = "white", size = 0.2) +
# overlay your ASR values
geom_sf(aes(fill = val), color = "grey50", size = 0.1) +
# 5‐bin red scale matching your example
scale_fill_stepsn(
colours  = brewer.pal(5, "Reds"),
breaks   = c(0, 2, 5, 10, 20),
labels   = c("0–2", "2–5", "5–10", "10–20", "20+"),
limits   = c(0, 20),
oob      = squish,
na.value = "white",
name     = "ASR\n(per 10⁵)"
) +
# locked to Robinson, no extra padding
coord_sf(crs = "+proj=robin", datum = NA, expand = FALSE) +
# clean theme
theme_void(base_size = 14) +
theme(
plot.tag           = element_text(face="bold", size=18),
plot.title       = element_text(face = "bold", size = 16),
plot.subtitle    = element_text(size = 12),
legend.position.inside      = c(0.98, 0.98),  # near top‐right
legend.justification.inside = c(1, 1),
legend.background= element_rect(fill = "white", color = NA),
legend.title     = element_text(size = 12),
legend.text      = element_text(size = 10)
) +
labs(
tag      = "A",
title    = "Age-Standardized Death Rate from /n Lower Respiratory Infections Attributable to Air Pollution (2021)",
subtitle = "per 100,000 population",
caption  = "Source: Global Burden of Disease Study 2021 Results"
)
# 6) Preview
print(map_asr)
# or, if you need a high-res TIFF:
ggsave(
"../Result/ASR_AirPollution.tiff",
plot   = map_asr,
width  = 8,
height = 5,
units  = "in",
dpi    = 600,
compression = "lzw"
)
asr_wide <- nation %>%
filter(
rei     == "Air pollution",
age     == "Age-standardized",
metric  == "Rate",
measure == "Deaths",
year    %in% c(1990, 2021)
) %>%
select(iso_a3, year, val) %>%
pivot_wider(names_from = year, values_from = val,
names_prefix = "ASR_")
# 3) Compute % change & categorical bins
asr_change <- asr_wide %>%
mutate(
pct_chg = 100*(ASR_2021 - ASR_1990)/ASR_1990,
change_cat = cut(
pct_chg,
breaks = c(-Inf, -80, -40, -20, 0,  Inf),
labels = c(
">80% decrease",
"40–80% decrease",
"20–40% decrease",
"<20% decrease",
"0–50% increase"
),
right = FALSE
)
)
# 4) Join to world sf, drop Antarctica
world <- ne_countries(scale="medium", returnclass="sf") %>%
filter(continent!="Antarctica")
world_plot <- world %>%
left_join(asr_change, by="iso_a3")
# 5) Define your green→red palette
pal <- c(
">80% decrease"       = "#00441b",
"40–80% decrease"     = "#238b45",
"20–40% decrease"     = "#66c2a4",
"<20% decrease"       = "#fdbb84",
"0–50% increase"      = "#e34a33"
)
# 6) Build the map object
map_asr <- ggplot(world_plot) +
# background
geom_sf(fill="grey95", color="white", size=0.2) +
# data
geom_sf(aes(fill=change_cat), color="grey80", size=0.1) +
# discrete scale
scale_fill_manual(
name   = "Change in ASR\n(1990–2021)",
values = pal,
na.value = "white",
drop   = FALSE
) +
coord_sf(crs = "+proj=robin", datum=NA, expand=FALSE) +
# tag and labels
labs(
tag      = "B",
title    = "Percent Change in Age-Standardized Death Rate from \n Lower Respiratory Infections Attributable to Air Pollution",
subtitle = "1990 to 2021",
caption  = "Source: Global Burden of Disease Study 2021 Results"
) +
# clean theme, Times font
theme_void(base_size = 14, base_family = "Times") +
theme(
plot.tag           = element_text(face="bold", size=18),
plot.tag.position  = c(0.02, 0.98),
plot.title         = element_text(face="bold", size=16, hjust=0.5),
plot.subtitle      = element_text(size=12, hjust=0.5),
plot.caption       = element_text(size=8, hjust=1),
legend.position    = c(0.05, 0.5),
legend.justification = c(0,0.5),
legend.title       = element_text(face="bold", size=10),
legend.text        = element_text(size=8)
)
# 7) Preview
print(map_asr)
# 9) (Optional) Export a high-res TIFF
ggsave(
"../Result/FigureB_ASRChange_AirPollution.tiff",
plot   = map_asr,
width  = 8, height = 5,
units  = "in",
dpi    = 600,
compression = "lzw"
)
top3_decrease <- asr_change %>%
slice_min(pct_chg, n = 3) %>%
select(iso_a3, pct_chg)
# Top 3 increases
top3_increase <- asr_change %>%
slice_max(pct_chg, n = 5) %>%
select(iso_a3, pct_chg)
top3_decrease
top3_increase
eapc_df <- nation %>%
filter(
rei     == "Air pollution",
age     == "Age-standardized",
metric  == "Rate",
measure == "Deaths"
) %>%
group_by(location) %>%
summarise(
beta = coef(lm(log(val) ~ year, data = cur_data()))[2],
.groups = "drop"
) %>%
mutate(
EAPC = (exp(beta) - 1) * 100,
# grab ISO3 for mapping
iso_a3 = countrycode(location,
origin      = "country.name",
destination = "iso3c")
) %>%
filter(!is.na(iso_a3))
world <- ne_countries(scale = "medium", returnclass = "sf") %>%
filter(continent != "Antarctica")
world_eapc <- world %>%
left_join(eapc_df, by = "iso_a3")
map_eapc <- ggplot(world_eapc) +
geom_sf(aes(fill = EAPC), color = "grey80", size = 0.1) +
scale_fill_gradient2(
low      = muted("green"),
mid      = "white",
high     = muted("red"),
midpoint = 0,
oob      = squish,
na.value = "grey95",
name     = "EAPC (%)"
) +
coord_sf(crs = "+proj=robin", datum = NA, expand = FALSE) +
theme_void(base_size = 14, base_family = "Times") +
theme(
plot.tag           = element_text(face="bold", size=18),
plot.title        = element_text(face = "bold", size = 16, hjust = 0.5),
plot.subtitle     = element_text(size = 12, hjust = 0.5),
legend.position.inside      = c(0.98, 0.98),  # near top‐right
legend.justification.inside = c(1, 1),
legend.background = element_rect(fill = "white", color = NA),
legend.title      = element_text(size = 10),
legend.text       = element_text(size = 8)
) +
labs(
tag      = "C",
title    = "EAPC in Age-Standardized Death Rate from \nLower Respiratory Infections Attributable to Air Pollution",
subtitle = "1990–2021",
caption  = "Source: Global Burden of Disease Study 2021 Results"
)
print(map_eapc)
ggsave("../Result/FigureC_EAPC_AirPollution.tiff",
map_eapc,
width  = 8, height = 5, units = "in",
dpi    = 600,
compression = "lzw")
SDI <- read_csv("../Data/SDI.csv")
glimpse(SDI)
SDI_sdi <- SDI %>%
filter(covariate_name_short == "sdi") %>%
rename(
location = location_name,
year     = year_id,
SDI      = mean_value
) %>%
select(location, year, SDI)
GBD_SDI <- GBD %>%
left_join(SDI_sdi, by = c("location", "year"))
glimpse(GBD_SDI)
dat <- GBD %>%
left_join(SDI_sdi, by = c("location", "year")) %>%
filter(
rei     == "Air pollution",
age     == "Age-standardized",
metric  == "Rate",
measure == "DALYs (Disability-Adjusted Life Years)",
cause   == "Lower respiratory infections"
) %>%
group_by(location, year, SDI) %>%
summarise(Rate = sum(val), .groups = "drop")
regions <- setdiff(unique(dat$location), "Global")
#— Plot —
p_clean <- ggplot() +
# 1) Regional trajectories (all except “Global”), colored by location
geom_line(
data      = filter(dat, location != "Global"),
aes(x      = SDI,
y      = Rate,
group  = location,
color  = location),
size  = 0.8,
alpha = 0.6
) +
# 2) Global trajectory: drawn as a bold black line, not part of the color scale
geom_line(
data      = filter(dat, location == "Global"),
aes(x      = SDI,
y      = Rate),
color = "black",
size  = 1.3,
alpha = 1
) +
# 3) Regional 2021 endpoints (all except “Global”), same color scale
geom_point(
data = filter(dat, year == max(year) & location != "Global"),
aes(x = SDI, y = Rate, color = location),
size  = 2.5,
alpha = 0.8
) +
# 4) Color scale for regions only
scale_color_viridis_d(
option = "turbo",
begin  = 0.1,
end    = 0.9,
guide  = guide_legend(
ncol      = 3,
byrow     = TRUE,
override.aes = list(size = 3, alpha = 1)
)
) +
# 5) Axes
scale_x_continuous(
name   = "Sociodemographic Index (SDI)",
labels = percent_format(1),
expand = c(0, 0)
) +
scale_y_continuous(
name   = "Age-standardized DALY rate\n(per 100 000)",
labels = comma_format(accuracy = 1),
expand = c(0, 0)
) +
# 6) Annotations
labs(
title    = "DALY Rate vs SDI (1990–2021)",
subtitle = "Air pollution, age-standardized (Lower respiratory infections) by GBD super-region",
caption  = "Black line = global trend",
color    = NULL
) +
# 7) Theme
theme_minimal(base_family = "Times", base_size = 14) +
theme(
plot.tag.position  = c(0.02, 0.98),
plot.tag           = element_text(face = "bold", size = 18),
plot.title         = element_text(face = "bold", size = 16, hjust = 0.5),
plot.subtitle      = element_text(size = 12, hjust = 0.5),
plot.caption       = element_text(size = 8, hjust = 1),
axis.title         = element_text(size = 12),
axis.text          = element_text(size = 10),
panel.grid.major   = element_line(color = "grey90", size = 0.4),
panel.grid.minor   = element_blank(),
legend.position    = "bottom",
legend.direction   = "horizontal",
legend.key.size    = unit(0.5, "lines"),
legend.text        = element_text(size = 8),
legend.margin      = margin(t = 5, b = 5)
)
print(p_clean)
ggsave("../Result/FigureA_DALY_vs_SDI_clean.tiff", p_clean,
width = 8, height = 5, units = "in", dpi = 600, compression = "lzw")
aapc_raw <- read.table("../Data/aapc.txt", header = TRUE) %>%
select(
Location   = 1,
AAPC_raw   = 6,
Lower_CI   = 7,
Upper_CI   = 8
) %>%
# If Location was accidentally read as factor, convert to character:
mutate(
Location   = as.character(Location),
AAPC_raw   = as.numeric(as.character(AAPC_raw)),
Lower_CI   = as.numeric(as.character(Lower_CI)),
Upper_CI   = as.numeric(as.character(Upper_CI))
) %>%
# Drop any spurious header‐row entry where Location == "Location":
filter(Location != "Location") %>%
# Compute the joint “numeric only” AAPC.  We’ll ignore the CI text formatting, since
# the map only needs the central estimate:
rename(
AAPC       = AAPC_raw
) %>%
# Now use countrycode() to get ISO3 for each “Location”
mutate(
iso_a3 = countrycode(Location,
origin      = "country.name",
destination = "iso3c")
) %>%
# Drop any rows where iso_a3 is NA (e.g., unmatched names):
filter(!is.na(iso_a3))
# Inspect the first few rows
# print(head(aapc_raw))
#── 2) Load & prepare the world sf ───────────────────────────────────────────────
world <- ne_countries(scale = "medium", returnclass = "sf") %>%
filter(continent != "Antarctica")
#── 3) Join AAPC onto the sf by iso_a3 ────────────────────────────────────────────
world_aapc <- world %>%
left_join(aapc_raw, by = "iso_a3")
#── 4) Make the AAPC map ─────────────────────────────────────────────────────────
map_aapc <- ggplot(world_aapc) +
geom_sf(aes(fill = AAPC), color = "grey80", size = 0.1) +
scale_fill_gradient2(
low      = muted("green"),
mid      = "white",
high     = muted("red"),
midpoint = 0,
oob      = squish,
na.value = "grey95",
name     = "AAPC  (%)"
) +
coord_sf(crs = "+proj=robin", datum = NA, expand = FALSE) +
theme_void(base_size = 14, base_family = "Times") +
theme(
plot.tag                    = element_text(face = "bold", size = 18),
plot.title                  = element_text(face = "bold", size = 16, hjust = 0.5),
plot.subtitle               = element_text(size = 12, hjust = 0.5),
legend.position.inside      = c(0.98, 0.98),
legend.justification.inside = c(1, 1),
legend.background           = element_rect(fill = "white", color = NA),
legend.title                = element_text(size = 10),
legend.text                 = element_text(size = 8)
) +
labs(
tag      = "C",
title    = "AAPC in Age- Standardized Death Rate from\n Lower Respiratory Infections Attributable to Air Pollution",
subtitle = "Average Annual Percent Change, 1990–2021",
caption  = "Source: Global Burden of Disease Study 2021 Results"
)
# Preview
print(map_aapc)
ggsave(
"../Result/FigureC_AAPC_AirPollution.tiff",
map_aapc,
width       = 8, height = 5,
units       = "in",
dpi         = 600,
compression = "lzw"
)
aapc_raw <- read.table("../Data/aapc.txt", header = TRUE) %>%
select(
Location   = 1,
AAPC_raw   = 6,
Lower_CI   = 7,
Upper_CI   = 8
) %>%
# If Location was accidentally read as factor, convert to character:
mutate(
Location   = as.character(Location),
AAPC_raw   = as.numeric(as.character(AAPC_raw)),
Lower_CI   = as.numeric(as.character(Lower_CI)),
Upper_CI   = as.numeric(as.character(Upper_CI))
) %>%
# Drop any spurious header‐row entry where Location == "Location":
filter(Location != "Location") %>%
# Compute the joint “numeric only” AAPC.  We’ll ignore the CI text formatting, since
# the map only needs the central estimate:
rename(
AAPC       = AAPC_raw
) %>%
# Now use countrycode() to get ISO3 for each “Location”
mutate(
iso_a3 = countrycode(Location,
origin      = "country.name",
destination = "iso3c")
) %>%
# Drop any rows where iso_a3 is NA (e.g., unmatched names):
filter(!is.na(iso_a3))
# Inspect the first few rows
# print(head(aapc_raw))
#── 2) Load & prepare the world sf ───────────────────────────────────────────────
world <- ne_countries(scale = "medium", returnclass = "sf") %>%
filter(continent != "Antarctica")
#── 3) Join AAPC onto the sf by iso_a3 ────────────────────────────────────────────
world_aapc <- world %>%
left_join(aapc_raw, by = "iso_a3")
#── 4) Make the AAPC map ─────────────────────────────────────────────────────────
map_aapc <- ggplot(world_aapc) +
geom_sf(aes(fill = AAPC), color = "grey80", size = 0.1) +
scale_fill_gradient2(
low      = muted("green"),
mid      = "white",
high     = muted("red"),
midpoint = 0,
oob      = squish,
na.value = "grey95",
name     = "AAPC  (%)"
) +
coord_sf(crs = "+proj=robin", datum = NA, expand = FALSE) +
theme_void(base_size = 14, base_family = "Times") +
theme(
plot.tag                    = element_text(face = "bold", size = 18),
plot.title                  = element_text(face = "bold", size = 16, hjust = 0.5),
plot.subtitle               = element_text(size = 12, hjust = 0.5),
legend.position.inside      = c(0.98, 0.98),
legend.justification.inside = c(1, 1),
legend.background           = element_rect(fill = "white", color = NA),
legend.title                = element_text(size = 10),
legend.text                 = element_text(size = 8)
) +
labs(
tag      = "D",
title    = "AAPC in Age- Standardized Death Rate from\n Lower Respiratory Infections Attributable to Air Pollution",
subtitle = "Average Annual Percent Change, 1990–2021",
caption  = "Source: Global Burden of Disease Study 2021 Results"
)
# Preview
print(map_aapc)
ggsave(
"../Result/FigureD_AAPC_AirPollution.tiff",
map_aapc,
width       = 8, height = 5,
units       = "in",
dpi         = 600,
compression = "lzw"
)
